# Создайте два фоновых процесса, выполняющих одинаковый бесконечный цикл вычисления (например, перемножение двух чисел). После запуска процессов должна сохраниться возможность использовать виртуальные консоли, с которых их запустили. Используя команду top, проанализируйте процент использования ресурсов процессора этими процессами. Добейтесь, чтобы тот процесс, который был запущен первым, использовал ресурс процессора не более чем на 20%

#!/bin/bash
# Запускаем первый процесс в фоновом режиме и сохраняем его PID в переменную pid1
./2024.09.20.04.sh & pid1=$!

# Запускаем второй процесс в фоновом режиме и сохраняем его PID в переменную pid2
./2024.09.20.04.sh & pid2=$!

# Выводим PID-ы обоих запущенных процессов для информации
echo $pid1
echo $pid2

# Ограничиваем использование CPU для процесса с PID pid1 до 5% с помощью cpulimit
cpulimit -p $pid1 -l 5 &

# Выводим сообщение, указывая, что первый процесс теперь, вероятно, использует не более 20% CPU
echo "PID "$pid1" now (probably) uses less than 5% CPU"

# Делаем паузу на 1 секунду, чтобы дать время для обновления состояния процессов
sleep 1

# Выводим информацию о процессах с их PID, % использования CPU и команды, которые их запустили
ps -p $pid1,$pid2 -o pid,%cpu,cmd

# Делаем паузу на 1 секунду, чтобы дать время для обновления состояния процессов
sleep 1

# Снова выводим информацию о процессах с их PID, % CPU и командой
ps -p $pid1,$pid2 -o pid,%cpu,cmd

# Еще одна пауза на 1 секунду
sleep 1

# Третий раз выводим информацию о процессах, чтобы увидеть, как изменилось использование CPU
ps -p $pid1,$pid2 -o pid,%cpu,cmd

# Завершаем оба процесса с помощью команды kill, отправляя сигнал завершения по их PID
kill $pid1
kill $pid2

# Завершаем работу скрипта с кодом 1 (можно поменять на 0 для успешного завершения)
exit 1
