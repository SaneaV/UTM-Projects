# 3) Скрипт backup 
# a) Скрипт создаст в /home/user/ каталог с именем Backup-YYYYMM-DD, где YYYY-MM-DD – дата запуска скрипта, если в /home/user/ нет каталога с именем, соответствующим дате, отстоящей от текущей менее чем на 7 дней. Если в /home/user/ уже есть «действующий» каталог резервного копирования (созданный не ранее 7 дней от даты запуска скрипта), то новый каталог не создается. Для определения текущей даты можно воспользоваться командой date.
# b) Если новый каталог был создан, то скрипт скопирует в этот каталог все файлы из каталога /home/user/source/ (для тестирования скрипта создайте такую директорию и набор файлов в ней). После этого скрипт выведет в режиме дополнения в файл /home/user/backup-report следующую информацию: строка со сведениями о создании нового каталога с резервными копиями с указанием его имени и даты создания; список файлов из /home/user/source/, которые были скопированы в этот каталог. 
# c) Если каталог не был создан (есть «действующий» каталог резервного копирования), то скрипт должен скопировать в него все файлы из /home/user/source/ по следующим правилам: если файла с таким именем в каталоге резервного копирования нет, то он копируется из /home/user/source. Если файл с таким именем есть, то его размер сравнивается с размером одноименного файла в действующем каталоге резервного копирования. Если размеры совпадают, файл не копируется. Если размеры отличаются, то файл копируется c автоматическим созданием версионной копии, таким образом, в действующем каталоге резервного копирования появляются обе версии файла (уже имеющийся файл переименовывается путем добавления дополнительного расширения «.YYYY-MM-DD» (дата запуска скрипта), а скопированный сохраняет имя). После окончания копирования в файл /home/user/backup-report выводится строка о внесении изменений в действующий каталог резервного копирования с указанием его имени и даты внесения изменений, затем строки, содержащие имена добавленных файлов с новыми именами


#!/bin/bash

# Установка пути к каталогу для резервного копирования и к исходному каталогу
backup_dir="$HOME/Backup-$(date +%Y%m%d)"  # Новый каталог резервного копирования
source_dir="$HOME/source"  # Исходный каталог, откуда будут копироваться файлы
report_file="$HOME/backup-report"  # Файл для отчета о резервном копировании

# Проверка на существование каталога резервного копирования
if [ -d "$backup_dir" ]; then
    echo "Backup directory '$backup_dir' already exists."
else
    # Поиск существующего каталога резервного копирования в пределах 7 дней
    for dir in "$HOME"/Backup-*; do
        if [ -d "$dir" ]; then
            # Получаем дату создания существующего каталога
            dir_date=$(basename "$dir" | cut -d '-' -f 2-4)  # Извлекаем дату из имени каталога
            dir_timestamp=$(date -d "$dir_date" +%s)  # Преобразуем дату в timestamp
            current_timestamp=$(date +%s)  # Получаем текущую дату в формате timestamp
            
            # Проверка, если разница меньше 7 дней (604800 секунд)
            if [ $((current_timestamp - dir_timestamp)) -lt 604800 ]; then
                echo "An active backup directory exists within the last 7 days."
                exit 0  # Завершаем скрипт, если найден активный каталог
            fi
        fi
    done

    # Если не найдено активного каталога, создаем новый
    mkdir "$backup_dir"
    echo "Backup directory created: $backup_dir on $(date +"%Y-%m-%d")" >> "$report_file"
fi

# Копируем файлы из исходного каталога в новый или существующий каталог резервного копирования
for file in "$source_dir"/*; do
    filename=$(basename "$file")  # Извлекаем имя файла
    backup_file="$backup_dir/$filename"  # Путь к файлу в каталоге резервного копирования

    # Если файл не существует в каталоге резервного копирования, копируем его
    if [ ! -e "$backup_file" ]; then
        cp "$file" "$backup_file"
        echo "Copied: $filename to $backup_dir" >> "$report_file"
    else
        # Если файл существует, сравниваем размеры
        if [ "$(stat -c%s "$file")" -ne "$(stat -c%s "$backup_file")" ]; then
            # Если размеры различаются, создаем версионную копию
            mv "$backup_file" "$backup_file.$(date +%Y-%m-%d)"  # Переименовываем существующий файл
            cp "$file" "$backup_file"  # Копируем новый файл
            echo "Updated: $filename to $backup_dir (versioned)" >> "$report_file"
        else
            echo "File $filename already exists and sizes match. Skipping." >> "$report_file"
        fi
    fi
done

echo "Backup completed."

