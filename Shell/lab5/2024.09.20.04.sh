# Для каждого процесса посчитать разность между общим размером (statm: size) и резидентной части (statm: resident) памяти процесса (в страницах). Вывести в файл строки вида PID:разность, отсортированные по убыванию этой разности. Вывести на экран содержимое файла.

#!/bin/bash

# Создаем файл для сохранения результата
output_file="memory_diff.txt"

# Очищаем файл перед началом
> "$output_file"

# Цикл для каждого процесса в /proc
# Папки в /proc с числовыми именами соответствуют PID процессов
for pid in $(ls /proc | grep '^[0-9]*$'); do
  # Проверяем, существует ли файл /proc/[PID]/statm, который содержит информацию о памяти процесса
  if [ -f /proc/$pid/statm ]; then
    # Читаем содержимое файла statm: интересующие нас колонки - размер (size) и резидентная память (resident)
    # Первое значение (size) - это общее количество страниц памяти, выделенных процессу
    size=$(awk '{print $1}' /proc/$pid/statm)
    # Второе значение (resident) - это количество страниц резидентной памяти (физически загруженной в оперативную память)
    resident=$(awk '{print $2}' /proc/$pid/statm)
    
    # Вычисляем разницу между общей памятью и резидентной памятью
    diff=$((size - resident))
    
    # Записываем PID и разницу в файл в формате "PID:разница"
    echo "$pid:$diff" >> "$output_file"
  fi
done

# Сортируем файл по убыванию разницы (diff) и выводим результат на экран с помощью команды tee
# -t ':' указывает разделитель для сортировки
# -k2 сортирует по второму полю (разнице), -n для числовой сортировки, -r для обратного порядка (по убыванию)
sort -t ':' -k2 -nr "$output_file" | tee "$output_file"
