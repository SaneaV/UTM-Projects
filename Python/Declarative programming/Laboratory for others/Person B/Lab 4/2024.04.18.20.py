# Создание сигнала как суперпозиции синусоидальных волн с частотами 50 Гц и 70 Гц (с небольшим
# сдвигом фазы между ними). Затем выполнение преобразования Фурье сигнала и построение
# абсолютного значения дискретных коэффициентов преобразования Фурье в зависимости от частоты
# (наблюдение пиков на 50 Гц и 70 Гц).

import scipy.fft
import numpy as np
import matplotlib.pyplot as plt

# Устанавливаем значения для длины сигнала и частоты дискретизации
signal_length = 0.5     # [секунды]
sample_rate = 500       # частота дискретизации [Гц]
dt = 1. / sample_rate   # временной интервал между отсчетами [с]

df = 1 / signal_length  # частота между точками в частотной области [Гц] 
t = np.arange(0, signal_length, dt)  # вектор времени
n_t = len(t)            # длина вектора времени

# Создаем сигнал
y = np.sin(2*np.pi*50*t) + np.sin(2*np.pi*70*t+np.pi/4)

# Вычисляем преобразование Фурье
f = scipy.fft.fft(y)

# Вычисляем осмысленные частоты в преобразовании Фурье
freqs = df * np.arange(0, (n_t-1)/2., dtype='d')  # 'd' - двойная точность чисел с плавающей запятой
n_freq = len(freqs)

# График входных данных y от времени
plt.subplot(2, 1, 1)
plt.plot(t, y, label='входные данные')
plt.xlabel('время [с]')
plt.ylabel('сигнал')

# График частотного спектра
plt.subplot(2, 1, 2)
plt.plot(freqs, abs(f[0:n_freq]),
         label='abs(преобразование Фурье)')
plt.xlabel('частота [Гц]')
plt.ylabel('abs(DFT(сигнал))')
plt.show()
