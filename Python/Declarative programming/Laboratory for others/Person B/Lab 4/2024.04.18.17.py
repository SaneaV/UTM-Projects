# –°—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è x, y, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (ùë•‚à®¬¨ùë¶)‚àß(ùë¶‚à®¬¨ùë•) –∏—Å—Ç–∏–Ω–Ω—ã–º? 
# –û–±–æ—Å–Ω—É–π—Ç–µ –æ—Ç–≤–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è sym.satisfiable.

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è sympy
import sympy as sym

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ x –∏ y
x, y = sym.symbols('x y')

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
expr = (x | ~y) & (y | ~x)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–º–æ—Å—Ç–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
satisfiability = sym.satisfiable(expr)

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("–í—ã—Ä–∞–∂–µ–Ω–∏–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–º–æ:", satisfiability)

# –î–∞, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–º–æ. –≠—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è sym.satisfiable, 
# –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ.
